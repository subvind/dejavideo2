[33m[nodemon] 3.1.9[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): src/**/*[39m
[33m[nodemon] watching extensions: ts,js[39m
[32m[nodemon] starting `ts-node ./src/index.ts -r dotenv/config src/index.ts`[39m
[12/16/2024, 12:32:52 PM] [INFO] Node-Media-Server v4.0.7
[12/16/2024, 12:32:52 PM] [INFO] Homepage: https://github.com/illuspas/Node-Media-Server
[12/16/2024, 12:32:52 PM] [INFO] License: Apache-2.0
[12/16/2024, 12:32:52 PM] [INFO] Author: Chen Mingliang
[12/16/2024, 12:32:52 PM] [INFO] Node-Media-Server v4.0.7
[12/16/2024, 12:32:52 PM] [INFO] Homepage: https://github.com/illuspas/Node-Media-Server
[12/16/2024, 12:32:52 PM] [INFO] License: Apache-2.0
[12/16/2024, 12:32:52 PM] [INFO] Author: Chen Mingliang
query: PRAGMA foreign_keys = OFF
query: BEGIN TRANSACTION
query: SELECT * FROM "sqlite_master" WHERE "type" = 'table' AND "name" IN ('video','deck','broadcast','dj')
query: SELECT * FROM "sqlite_master" WHERE "type" = 'index' AND "tbl_name" IN ('video','deck','broadcast','dj')
query: PRAGMA table_xinfo("video")
query: PRAGMA index_list("video")
query: PRAGMA foreign_key_list("video")
query: PRAGMA table_xinfo("dj")
query: PRAGMA index_list("dj")
query: PRAGMA foreign_key_list("dj")
query: PRAGMA table_xinfo("deck")
query: PRAGMA index_list("deck")
query: PRAGMA foreign_key_list("deck")
query: PRAGMA table_xinfo("broadcast")
query: PRAGMA index_list("broadcast")
query: PRAGMA foreign_key_list("broadcast")
query: PRAGMA index_info("sqlite_autoindex_dj_3")
query: PRAGMA index_info("sqlite_autoindex_dj_2")
query: SELECT * FROM "sqlite_master" WHERE "type" = 'table' AND "name" = 'typeorm_metadata'
query: COMMIT
query: PRAGMA foreign_keys = ON
Database initialized
[12/16/2024, 12:32:52 PM] [INFO] HTTP server listening on port undefined:8000
[12/16/2024, 12:32:52 PM] [INFO] Rtmp Server listening on port undefined:1935
RTMP service initialized
query: SELECT "DJ"."id" AS "DJ_id", "DJ"."username" AS "DJ_username", "DJ"."email" AS "DJ_email", "DJ"."status" AS "DJ_status", "DJ"."resourceUsage" AS "DJ_resourceUsage", "DJ"."createdAt" AS "DJ_createdAt", "DJ"."updatedAt" AS "DJ_updatedAt", "DJ__DJ_decks"."id" AS "DJ__DJ_decks_id", "DJ__DJ_decks"."type" AS "DJ__DJ_decks_type", "DJ__DJ_decks"."status" AS "DJ__DJ_decks_status", "DJ__DJ_decks"."streamHealth" AS "DJ__DJ_decks_streamHealth", "DJ__DJ_decks"."obsPort" AS "DJ__DJ_decks_obsPort", "DJ__DJ_decks"."djId" AS "DJ__DJ_decks_djId", "DJ__DJ_decks"."currentVideoId" AS "DJ__DJ_decks_currentVideoId" FROM "dj" "DJ" LEFT JOIN "deck" "DJ__DJ_decks" ON "DJ__DJ_decks"."djId"="DJ"."id" WHERE (("DJ"."status" = ?)) -- PARAMETERS: ["active"]
Stream manager initialized
API Server running on port 3000
RTMP Server running on port 1935
RTMP HTTP Server running on port 8000
query: SELECT DISTINCT "distinctAlias"."DJ_id" AS "ids_DJ_id" FROM (SELECT "DJ"."id" AS "DJ_id", "DJ"."username" AS "DJ_username", "DJ"."email" AS "DJ_email", "DJ"."status" AS "DJ_status", "DJ"."resourceUsage" AS "DJ_resourceUsage", "DJ"."createdAt" AS "DJ_createdAt", "DJ"."updatedAt" AS "DJ_updatedAt", "DJ__DJ_decks"."id" AS "DJ__DJ_decks_id", "DJ__DJ_decks"."type" AS "DJ__DJ_decks_type", "DJ__DJ_decks"."status" AS "DJ__DJ_decks_status", "DJ__DJ_decks"."streamHealth" AS "DJ__DJ_decks_streamHealth", "DJ__DJ_decks"."obsPort" AS "DJ__DJ_decks_obsPort", "DJ__DJ_decks"."djId" AS "DJ__DJ_decks_djId", "DJ__DJ_decks"."currentVideoId" AS "DJ__DJ_decks_currentVideoId", "DJ__DJ_broadcasts"."id" AS "DJ__DJ_broadcasts_id", "DJ__DJ_broadcasts"."channelId" AS "DJ__DJ_broadcasts_channelId", "DJ__DJ_broadcasts"."status" AS "DJ__DJ_broadcasts_status", "DJ__DJ_broadcasts"."crossfaderPosition" AS "DJ__DJ_broadcasts_crossfaderPosition", "DJ__DJ_broadcasts"."streamStats" AS "DJ__DJ_broadcasts_streamStats", "DJ__DJ_broadcasts"."djId" AS "DJ__DJ_broadcasts_djId" FROM "dj" "DJ" LEFT JOIN "deck" "DJ__DJ_decks" ON "DJ__DJ_decks"."djId"="DJ"."id"  LEFT JOIN "broadcast" "DJ__DJ_broadcasts" ON "DJ__DJ_broadcasts"."djId"="DJ"."id" WHERE (("DJ"."id" = ?))) "distinctAlias" ORDER BY "DJ_id" ASC LIMIT 1 -- PARAMETERS: ["88648c6c-586f-4bab-82ee-a6cd1f1d29ee"]
query: SELECT "DJ"."id" AS "DJ_id", "DJ"."username" AS "DJ_username", "DJ"."email" AS "DJ_email", "DJ"."status" AS "DJ_status", "DJ"."resourceUsage" AS "DJ_resourceUsage", "DJ"."createdAt" AS "DJ_createdAt", "DJ"."updatedAt" AS "DJ_updatedAt", "DJ__DJ_decks"."id" AS "DJ__DJ_decks_id", "DJ__DJ_decks"."type" AS "DJ__DJ_decks_type", "DJ__DJ_decks"."status" AS "DJ__DJ_decks_status", "DJ__DJ_decks"."streamHealth" AS "DJ__DJ_decks_streamHealth", "DJ__DJ_decks"."obsPort" AS "DJ__DJ_decks_obsPort", "DJ__DJ_decks"."djId" AS "DJ__DJ_decks_djId", "DJ__DJ_decks"."currentVideoId" AS "DJ__DJ_decks_currentVideoId", "DJ__DJ_broadcasts"."id" AS "DJ__DJ_broadcasts_id", "DJ__DJ_broadcasts"."channelId" AS "DJ__DJ_broadcasts_channelId", "DJ__DJ_broadcasts"."status" AS "DJ__DJ_broadcasts_status", "DJ__DJ_broadcasts"."crossfaderPosition" AS "DJ__DJ_broadcasts_crossfaderPosition", "DJ__DJ_broadcasts"."streamStats" AS "DJ__DJ_broadcasts_streamStats", "DJ__DJ_broadcasts"."djId" AS "DJ__DJ_broadcasts_djId" FROM "dj" "DJ" LEFT JOIN "deck" "DJ__DJ_decks" ON "DJ__DJ_decks"."djId"="DJ"."id"  LEFT JOIN "broadcast" "DJ__DJ_broadcasts" ON "DJ__DJ_broadcasts"."djId"="DJ"."id" WHERE ( (("DJ"."id" = ?)) ) AND ( "DJ"."id" IN (?) ) -- PARAMETERS: ["88648c6c-586f-4bab-82ee-a6cd1f1d29ee","88648c6c-586f-4bab-82ee-a6cd1f1d29ee"]
